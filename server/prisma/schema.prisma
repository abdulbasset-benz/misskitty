// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  id          Int      @id @default(autoincrement())
  name        String
  description String?
  price       Float
  stock       Int      @default(0)
  sizes       String[] // Array of available sizes
  colors      String[] // Array of available colors
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  orders      Order[]
  images      ProductImage[]
}

model ProductImage {
  id        Int     @id @default(autoincrement())
  filename  String
  productId Int
  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)
}

model Order {
  id              Int     @id @default(autoincrement())
  CustomerName    String
  CustomerPhone   String
  CustomerAddress String

  productId Int
  product   Product @relation(fields: [productId], references: [id])
}

model Wilaya {
  id       Int      @id
  code     String
  name     String
  nameAr   String
  dairas   Daira[]
}

model Daira {
  id        Int      @id @default(autoincrement())
  name      String
  nameAr    String
  wilayaId  Int
  wilaya    Wilaya   @relation(fields: [wilayaId], references: [id])
  communes  Commune[]
}

model Commune {
  id        Int     @id
  name      String
  nameAr    String
  dairaId   Int
  daira     Daira   @relation(fields: [dairaId], references: [id])
}

model City {
  id              Int    @id @default(autoincrement())
  commune_name    String
  commune_name_ascii String
  daira_name      String
  daira_name_ascii String
  wilaya_code     String
  wilaya_name     String
  wilaya_name_ascii String
}


model Admin {
  id       Int    @id @default(autoincrement())
  email    String @unique
  password String
}